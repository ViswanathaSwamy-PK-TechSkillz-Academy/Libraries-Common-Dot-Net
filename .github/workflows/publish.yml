name: Publish .NET libraries / packages

on:
  workflow_dispatch:
  push:
    branches:
      - main # or the branch you want to trigger the action

permissions:
  id-token: write
  contents: read
  packages: write

defaults:
  run:
    working-directory: ./src/HeaderFooter

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch-depth is needed for GitVersion

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x" # Use the appropriate .NET version

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0
        with:
          versionSpec: 5.x

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3.0.0
        id: gitversion # step id used as reference for output values

      - name: Display GitVersion outputs
        run: |
          echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Pack the project
        run: dotnet pack --configuration Release --no-restore -p:Version='${{ steps.gitversion.outputs.SemVer }}'

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nugetPackage
          path: "**/HeaderFooter/bin/Release/*.nupkg"

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' # only run job if on the main branch

    steps:
      - name: Download NuGet package artifact
        uses: actions/download-artifact@v4
        with:
          name: nugetPackage

      - name: Prep packages
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name gHTechSkillzAcademy "https://nuget.pkg.github.com/ViswanathaSwamy-PK-TechSkillz-Academy/index.json"

      - name: Push package to GitHub packages
        if: needs.build.outputs.CommitsSinceVersionSource > 0 # Only release if there has been a commit/version change
        run: dotnet nuget push '**/*.nupkg' --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "gHTechSkillzAcademy"

      - name: Create Release
        if: needs.build.outputs.CommitsSinceVersionSource > 0 # Only release if there has been a commit/version change
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.Version }}
          name: Release ${{ needs.build.outputs.Version }}
          artifacts: "nugetPackage/*"
          token: ${{ secrets.GHUB_PAT }}
